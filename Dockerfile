# 리눅스와 node.js 가 함께 설치되어 있는 이미지. 
# nodejs 버전과 일치하는 숫자를 선택, 용량이 적은 slim 버전을 선택
# windows 이미지 설치해도 되지만 리눅스가 서버비가 보통 덜 들기 때문에 선택
FROM node:22-slim 

# /app 폴더로 이동 (cd 명령어랑 비슷함)
# 만약 없으면 하나 생성해 줌
# 이미지 기본 경로에 파일을 옮기면 좀 더러워지니까 /app 이라는 폴더를 하나 만들어서 깔끔하게 거기에 정리
WORKDIR /app

# package로 시작하는 이름의 json 확장자 파일을 복사
# 이렇게 해두면 캐시를 사용할 수 있기 때문에 build 할 때 조금이라도 시간을 단축할 수 있음
# 자주 바뀌는 애들은 밑쪽에, 라이브러리처럼 자주 바뀌지 않는 애들은 위쪽에 배치하는 전략임
COPY package*.json .

# install 대신에 ci 명령어를 사용하면 clean install 가능
# pacakae-lock.json 에 명시된 명확한 버전을 기준으로 라이브러리 설치를 하기에 더 안정적
RUN ["npm", "install"]

# 내 컴퓨터 폴더 경로 / 이미지를 어디로 옮길건지
# . 은 현재 경로라는 뜻
# 근데 필요없는 애들도 복사돼버리기 때문에 .dockerignore 로 관리
# 내 소스코드를 복사하는 코드
COPY . .

# 라이브러리 설치
RUN ["npm", "install"]

# 어떤 포트를 열어서 사용할 지
# 근데 나중에 이미지 실행할 때 힌트제공용, 그냥 메모용임, 기능상 아무 의미 없음
EXPOSE 8080


# 모든 명령어들은 원래 root 권한으로 실행이 됨
# 근데 보안상 위험할 수 있기 때문에 사용자 하나 만들어서 유저 권한을 낮추는 게 좋음
# nodeJS 공식 이미지를 사용한다면 node 라는 사용자가 미리 만들어져 있기 때문에 그거 사용하면 됨
USER node

# 마지막 터미널 명령어는 RUN 말고 CMD 로 작성 (혹은 ENTRYPOINT)
CMD ["node", "server.js"]